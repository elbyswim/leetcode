class Solution:
    def countTriplets(self, arr) -> int:
        seen = {}
        zeroes = set()
        count = 0

        def helper(start, end):
            if start + 1 == end:
                return arr[start]
            elif start in zeroes:
                return 0
            else:
                ans = seen[(start, end - 1)] ^ arr[end - 1]
                if ans == 0:
                    zeroes.add(start)
                return ans

            # return reduce(lambda x, y: x ^ y, arr[start:end])

        for i in range(len(arr) - 1):
            for j in range(i + 1, len(arr)):
                for k in range(j, len(arr)):
                    if (i, j) not in seen:
                        seen[(i, j)] = helper(i, j)
                    a = seen[(i, j)]
                    if (j, k + 1) not in seen:
                        seen[(j, k + 1)] = helper(j, k + 1)
                    b = seen[(j, k + 1)]
                    count += 1 if a == b else 0
        return count

    def minTime(self, n: int, edges, hasApple: List[bool]) -> int:
        from functools import reduce
        if reduce(lambda a, b: a and b, hasApple):
            return




soln = Solution();
print(soln.countTriplets([1, 1, 1, 1, 1]))


[331,821,638,843,309,26,303,970,741,316,985,289,760,48,712,420,876,365,513,768,257,716,973,654,323,638,829,644,441,618,979,521,474,429,119,112,7,147,148,474,334,462,128,370,498,768,754,336,930,744,330,695,1021,320,701,492,849,375,550,663,177,345,488,99,395,531,920,354,762,541,231,252,27,433,426,839,749,652,97,139,234,239,5,760,765,943,338,415,205,52,249,437,332,161,493,700,849,408,713,562,251,101,158,359,505,58,451,407,84,509,425,7,430,477,115,722,673,539,186,401,299,923,688,353,977,949,100,78,42,46,4,503,499,525,1022,460,562,571,9,286,279,895,616,963,427,858,753,21,740,409,893,522,375,136,511,314,197,6,195,895,956,42,918,612,498,289,211,763,552,764,212,386,342,348,10,579,585,270,839,280,607,474,901,50,951,44,923,826,161,719,622,192,686,146,572,274,814,597,379,212,431,867,716,862,402,162,304,976,736,564,212,756,544,398,942,553,391,935,544,541,61,488,469,834,663,684,59,518,573,610,95,458,405,45,440,177,265,758,1023,578,445,300,145,946,803,909,174,311,409,853,716,92,656,189,557,250,727,844,411,357,254,654,624,25,617,555,66,318,380,366,18,569,555,426,897]
